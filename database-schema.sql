-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.a_iprocessing_jobs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  document_id uuid NOT NULL,
  job_type character varying NOT NULL,
  status character varying NOT NULL DEFAULT 'queued'::character varying,
  priority bigint NOT NULL DEFAULT 5,
  attempts bigint NOT NULL DEFAULT 0,
  max_attempts bigint NOT NULL DEFAULT 3,
  error_message text,
  result jsonb,
  processing_time_ms bigint,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  CONSTRAINT a_iprocessing_jobs_pkey PRIMARY KEY (id),
  CONSTRAINT fk_documents_ai_jobs FOREIGN KEY (document_id) REFERENCES public.documents(id),
  CONSTRAINT fk_tenants_ai_jobs FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.audit_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  user_id uuid NOT NULL,
  resource_id uuid NOT NULL,
  action character varying NOT NULL,
  resource_type character varying NOT NULL,
  ip_address character varying,
  user_agent text,
  details jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT audit_logs_pkey PRIMARY KEY (id),
  CONSTRAINT fk_audit_logs_user FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT fk_audit_logs_tenant FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.categories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  color character varying DEFAULT '#6B7280'::character varying,
  icon character varying,
  is_system boolean NOT NULL DEFAULT false,
  sort_order bigint NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT categories_pkey PRIMARY KEY (id),
  CONSTRAINT fk_tenants_categories FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.document_analytics (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  document_id uuid NOT NULL,
  view_count bigint NOT NULL DEFAULT 0,
  download_count bigint NOT NULL DEFAULT 0,
  share_count bigint NOT NULL DEFAULT 0,
  last_accessed_at timestamp with time zone,
  processing_time bigint,
  storage_cost numeric,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT document_analytics_pkey PRIMARY KEY (id),
  CONSTRAINT fk_document_analytics_document FOREIGN KEY (document_id) REFERENCES public.documents(id),
  CONSTRAINT fk_document_analytics_tenant FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.document_categories (
  document_id uuid NOT NULL DEFAULT uuid_generate_v4(),
  category_id uuid NOT NULL DEFAULT uuid_generate_v4(),
  CONSTRAINT document_categories_pkey PRIMARY KEY (document_id, category_id),
  CONSTRAINT fk_document_categories_document FOREIGN KEY (document_id) REFERENCES public.documents(id),
  CONSTRAINT fk_document_categories_category FOREIGN KEY (category_id) REFERENCES public.categories(id)
);
CREATE TABLE public.document_chat_sessions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  document_id uuid NOT NULL,
  user_id uuid NOT NULL,
  session_name character varying,
  messages jsonb NOT NULL DEFAULT '[]'::jsonb,
  context jsonb DEFAULT '{}'::jsonb,
  is_active boolean NOT NULL DEFAULT true,
  total_messages integer NOT NULL DEFAULT 0,
  last_message_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT document_chat_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT fk_chat_sessions_document FOREIGN KEY (document_id) REFERENCES public.documents(id),
  CONSTRAINT fk_chat_sessions_user FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT fk_document_chat_sessions_user FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT fk_documents_chat_sessions FOREIGN KEY (document_id) REFERENCES public.documents(id)
);
CREATE TABLE public.document_comments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  document_id uuid NOT NULL,
  user_id uuid NOT NULL,
  content text NOT NULL,
  is_resolved boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT document_comments_pkey PRIMARY KEY (id),
  CONSTRAINT fk_documents_comments FOREIGN KEY (document_id) REFERENCES public.documents(id),
  CONSTRAINT fk_document_comments_user FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.document_embeddings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  document_id uuid NOT NULL,
  embedding USER-DEFINED NOT NULL,
  chunk_index integer NOT NULL DEFAULT 0,
  chunk_content text NOT NULL,
  token_count integer NOT NULL DEFAULT 0,
  created_at timestamp without time zone NOT NULL DEFAULT now(),
  CONSTRAINT document_embeddings_pkey PRIMARY KEY (id),
  CONSTRAINT fk_documents_embeddings FOREIGN KEY (document_id) REFERENCES public.documents(id),
  CONSTRAINT document_embeddings_document_id_fkey FOREIGN KEY (document_id) REFERENCES public.documents(id)
);
CREATE TABLE public.document_relationships (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  source_document_id uuid NOT NULL,
  target_document_id uuid NOT NULL,
  relationship_type character varying NOT NULL,
  confidence_score numeric,
  description text,
  detected_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT document_relationships_pkey PRIMARY KEY (id),
  CONSTRAINT fk_document_relationships_source_document FOREIGN KEY (source_document_id) REFERENCES public.documents(id),
  CONSTRAINT fk_doc_rel_source FOREIGN KEY (source_document_id) REFERENCES public.documents(id),
  CONSTRAINT fk_doc_rel_target FOREIGN KEY (target_document_id) REFERENCES public.documents(id),
  CONSTRAINT fk_document_relationships_target_document FOREIGN KEY (target_document_id) REFERENCES public.documents(id)
);
CREATE TABLE public.document_tags (
  document_id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tag_id uuid NOT NULL DEFAULT uuid_generate_v4(),
  CONSTRAINT document_tags_pkey PRIMARY KEY (document_id, tag_id),
  CONSTRAINT fk_document_tags_document FOREIGN KEY (document_id) REFERENCES public.documents(id),
  CONSTRAINT fk_document_tags_tag FOREIGN KEY (tag_id) REFERENCES public.tags(id)
);
CREATE TABLE public.document_templates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  doc_type character varying NOT NULL,
  template jsonb NOT NULL,
  is_active boolean NOT NULL DEFAULT true,
  created_by uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT document_templates_pkey PRIMARY KEY (id),
  CONSTRAINT fk_document_templates_creator FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT fk_tenants_templates FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.document_versions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  document_id uuid NOT NULL,
  version_number bigint NOT NULL,
  storage_path character varying NOT NULL,
  file_size bigint NOT NULL,
  content_hash character varying NOT NULL,
  changes text,
  created_by uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT document_versions_pkey PRIMARY KEY (id),
  CONSTRAINT fk_documents_versions FOREIGN KEY (document_id) REFERENCES public.documents(id),
  CONSTRAINT fk_document_versions_creator FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.documents (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  folder_id uuid,
  file_name character varying NOT NULL,
  original_name character varying NOT NULL,
  content_type character varying NOT NULL,
  file_size bigint NOT NULL,
  storage_path character varying NOT NULL,
  thumbnail_path character varying,
  preview_path character varying,
  extracted_text text,
  content_hash character varying NOT NULL,
  ocr_text text,
  summary text,
  ai_confidence numeric,
  embedding USER-DEFINED,
  title character varying,
  description text,
  document_type character varying,
  status character varying NOT NULL DEFAULT 'pending'::character varying,
  version bigint NOT NULL DEFAULT 1,
  language character varying DEFAULT 'en'::character varying,
  document_number character varying,
  reference_number character varying,
  external_id character varying,
  amount numeric,
  currency character varying DEFAULT 'USD'::character varying,
  tax_amount numeric,
  vendor_name character varying,
  customer_name character varying,
  document_date timestamp with time zone,
  due_date timestamp with time zone,
  expiry_date timestamp with time zone,
  compliance_status character varying DEFAULT 'pending'::character varying,
  retention_date timestamp with time zone,
  legal_hold boolean NOT NULL DEFAULT false,
  extracted_data jsonb,
  custom_fields jsonb,
  created_by uuid NOT NULL,
  updated_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  author character varying,
  subject character varying,
  keywords text,
  document_created_at timestamp with time zone,
  document_modified_at timestamp with time zone,
  ai_summary text,
  ai_key_points jsonb,
  ai_entities jsonb,
  ai_categories ARRAY,
  ai_confidence_score numeric,
  ai_processed_at timestamp without time zone,
  a_iprocessed_at timestamp with time zone,
  normalized_text text,
  text_extraction_status character varying DEFAULT 'pending'::character varying,
  text_extraction_error text,
  text_extraction_method character varying,
  text_quality numeric,
  text_language character varying,
  text_word_count bigint DEFAULT 0,
  text_char_count bigint DEFAULT 0,
  text_extraction_time_ms bigint DEFAULT 0,
  text_extracted_at timestamp with time zone,
  CONSTRAINT documents_pkey PRIMARY KEY (id),
  CONSTRAINT fk_users_created_documents FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT fk_users_updated_documents FOREIGN KEY (updated_by) REFERENCES public.users(id),
  CONSTRAINT fk_tenants_documents FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_folders_documents FOREIGN KEY (folder_id) REFERENCES public.folders(id)
);
CREATE TABLE public.folders (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  parent_id uuid,
  name character varying NOT NULL,
  description text,
  path character varying NOT NULL,
  level bigint NOT NULL DEFAULT 0,
  is_system boolean NOT NULL DEFAULT false,
  color character varying DEFAULT '#6B7280'::character varying,
  icon character varying,
  created_by uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT folders_pkey PRIMARY KEY (id),
  CONSTRAINT fk_tenants_folders FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_users_created_folders FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT fk_folders_children FOREIGN KEY (parent_id) REFERENCES public.folders(id)
);
CREATE TABLE public.invoices (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  subscription_id uuid NOT NULL,
  stripe_invoice_id character varying NOT NULL UNIQUE,
  stripe_payment_intent_id character varying UNIQUE,
  invoice_number character varying NOT NULL,
  status character varying NOT NULL,
  amount_due bigint NOT NULL,
  amount_paid bigint NOT NULL DEFAULT 0,
  subtotal bigint NOT NULL,
  tax bigint NOT NULL DEFAULT 0,
  total bigint NOT NULL,
  currency character varying NOT NULL DEFAULT 'usd'::character varying,
  period_start timestamp with time zone NOT NULL,
  period_end timestamp with time zone NOT NULL,
  due_date timestamp with time zone,
  paid_at timestamp with time zone,
  hosted_invoice_url character varying,
  invoice_pdf character varying,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT invoices_pkey PRIMARY KEY (id),
  CONSTRAINT fk_subscriptions_invoices FOREIGN KEY (subscription_id) REFERENCES public.subscriptions(id),
  CONSTRAINT invoices_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES public.subscriptions(id),
  CONSTRAINT invoices_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_invoices_tenant FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.multi_document_analyses (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  tenant_id uuid NOT NULL,
  document_ids jsonb NOT NULL DEFAULT '[]'::jsonb,
  analysis_type character varying NOT NULL,
  query text,
  result jsonb,
  confidence_score numeric,
  processing_time_ms bigint,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT multi_document_analyses_pkey PRIMARY KEY (id),
  CONSTRAINT fk_multi_document_analyses_tenant FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_multi_doc_user FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT fk_multi_doc_tenant FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_multi_document_analyses_user FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  user_id uuid NOT NULL,
  type character varying NOT NULL,
  title character varying NOT NULL,
  message text NOT NULL,
  channel character varying NOT NULL DEFAULT 'in_app'::character varying,
  is_read boolean NOT NULL DEFAULT false,
  data jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT fk_notifications_tenant FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_notifications_user FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.shares (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  document_id uuid NOT NULL,
  created_by uuid NOT NULL,
  token character varying NOT NULL UNIQUE,
  password character varying,
  expires_at timestamp with time zone,
  max_downloads bigint DEFAULT 0,
  download_count bigint DEFAULT 0,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT shares_pkey PRIMARY KEY (id),
  CONSTRAINT fk_shares_document FOREIGN KEY (document_id) REFERENCES public.documents(id),
  CONSTRAINT fk_shares_creator FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT fk_shares_tenant FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.subscriptions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL UNIQUE,
  stripe_customer_id character varying NOT NULL UNIQUE,
  stripe_subscription_id character varying NOT NULL UNIQUE,
  stripe_price_id character varying NOT NULL,
  stripe_product_id character varying NOT NULL,
  status character varying NOT NULL DEFAULT 'trialing'::subscription_status,
  tier character varying NOT NULL DEFAULT 'starter'::subscription_tier,
  plan_name character varying NOT NULL,
  amount bigint NOT NULL,
  currency character varying NOT NULL DEFAULT 'usd'::character varying,
  interval character varying NOT NULL,
  interval_count integer NOT NULL DEFAULT 1,
  current_period_start timestamp with time zone NOT NULL,
  current_period_end timestamp with time zone NOT NULL,
  trial_start timestamp with time zone,
  trial_end timestamp with time zone,
  canceled_at timestamp with time zone,
  cancel_at_period_end boolean NOT NULL DEFAULT false,
  documents_included bigint NOT NULL,
  documents_used integer NOT NULL DEFAULT 0,
  storage_included bigint NOT NULL,
  storage_used bigint NOT NULL DEFAULT 0,
  ai_credits_included bigint NOT NULL,
  ai_credits_used integer NOT NULL DEFAULT 0,
  users_included bigint NOT NULL,
  features jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT subscriptions_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_subscriptions_tenant FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.system_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  log_level character varying NOT NULL DEFAULT 'INFO'::character varying,
  message text NOT NULL,
  context jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT system_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.tags (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  name character varying NOT NULL,
  color character varying DEFAULT '#6B7280'::character varying,
  is_ai_generated boolean NOT NULL DEFAULT false,
  usage_count bigint NOT NULL DEFAULT 0,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT tags_pkey PRIMARY KEY (id),
  CONSTRAINT fk_tenants_tags FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.tenants (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  subdomain character varying NOT NULL UNIQUE,
  subscription_tier character varying NOT NULL DEFAULT 'starter'::character varying,
  storage_quota bigint NOT NULL DEFAULT '5368709120'::bigint,
  storage_used bigint NOT NULL DEFAULT 0,
  api_quota bigint NOT NULL DEFAULT 1000,
  api_used bigint NOT NULL DEFAULT 0,
  settings jsonb DEFAULT '{}'::jsonb,
  is_active boolean NOT NULL DEFAULT true,
  trial_ends_at timestamp with time zone,
  business_type character varying,
  industry character varying,
  company_size character varying,
  tax_id character varying,
  address jsonb,
  retention_policy jsonb,
  compliance_rules jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT tenants_pkey PRIMARY KEY (id)
);
CREATE TABLE public.usage_records (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  subscription_id uuid NOT NULL,
  metric_type character varying NOT NULL,
  quantity bigint NOT NULL,
  unit character varying NOT NULL,
  period_start timestamp with time zone NOT NULL,
  period_end timestamp with time zone NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT usage_records_pkey PRIMARY KEY (id),
  CONSTRAINT usage_records_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES public.subscriptions(id),
  CONSTRAINT fk_subscriptions_usage_records FOREIGN KEY (subscription_id) REFERENCES public.subscriptions(id),
  CONSTRAINT usage_records_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT fk_usage_records_tenant FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  email character varying NOT NULL,
  password_hash character varying NOT NULL,
  first_name character varying NOT NULL,
  last_name character varying NOT NULL,
  role character varying NOT NULL DEFAULT 'user'::character varying,
  department character varying,
  job_title character varying,
  is_active boolean NOT NULL DEFAULT true,
  email_verified boolean NOT NULL DEFAULT false,
  last_login_at timestamp with time zone,
  password_changed_at timestamp with time zone NOT NULL DEFAULT now(),
  mfa_enabled boolean NOT NULL DEFAULT false,
  mfa_secret character varying,
  preferences jsonb DEFAULT '{}'::jsonb,
  notification_settings jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT fk_tenants_users FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.workflow_tasks (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  workflow_id uuid NOT NULL,
  document_id uuid NOT NULL,
  assigned_to uuid NOT NULL,
  task_type character varying NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::workflow_status,
  priority bigint NOT NULL DEFAULT 5,
  due_date timestamp with time zone,
  comments text,
  completed_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT workflow_tasks_pkey PRIMARY KEY (id),
  CONSTRAINT fk_users_workflow_tasks FOREIGN KEY (assigned_to) REFERENCES public.users(id),
  CONSTRAINT fk_workflows_tasks FOREIGN KEY (workflow_id) REFERENCES public.workflows(id),
  CONSTRAINT fk_documents_workflow_tasks FOREIGN KEY (document_id) REFERENCES public.documents(id)
);
CREATE TABLE public.workflows (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  doc_type character varying NOT NULL,
  rules jsonb NOT NULL,
  is_active boolean NOT NULL DEFAULT true,
  created_by uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT workflows_pkey PRIMARY KEY (id),
  CONSTRAINT fk_workflows_creator FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT fk_tenants_workflows FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.workspace_contexts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  user_id uuid NOT NULL,
  context_data jsonb NOT NULL,
  documents_analyzed integer NOT NULL DEFAULT 0,
  tokens_used integer NOT NULL DEFAULT 0,
  processing_time_ms integer NOT NULL DEFAULT 0,
  context_quality numeric DEFAULT 1.0,
  generated_at timestamp with time zone NOT NULL DEFAULT now(),
  expires_at timestamp with time zone NOT NULL DEFAULT (now() + '02:00:00'::interval),
  CONSTRAINT workspace_contexts_pkey PRIMARY KEY (id),
  CONSTRAINT fk_workspace_contexts_user FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT fk_workspace_contexts_tenant FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);